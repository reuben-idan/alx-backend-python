name: CI

on:
  push:
    paths:
      - "**/messaging_app/**"
  pull_request:
    paths:
      - "**/messaging_app/**"

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_pass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3
    env:
      DATABASE_HOST: 127.0.0.1
      DATABASE_PORT: 3306
      DATABASE_NAME: test_db
      DATABASE_USER: test_user
      DATABASE_PASSWORD: test_pass
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r messaging_app/requirements.txt || pip install -r messaging_app/requirement.txt
      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            mysqladmin ping -h127.0.0.1 -uroot -proot && break
            sleep 2
          done
      - name: Run tests
        run: pytest messaging_app --junitxml=report.xml --cov=messaging_app --cov-report=xml
      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: report.xml
      - name: Run flake8
        run: |
          pip install flake8
          flake8 messaging_app
      - name: Check flake8 result
        run: |
          flake8 messaging_app
        continue-on-error: false
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
 