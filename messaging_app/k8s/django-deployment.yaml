apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-deployment
  namespace: messaging-app
  labels:
    app: django
    tier: web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: django
      tier: web
  template:
    metadata:
      labels:
        app: django
        tier: web
    spec:
      containers:
      - name: django
        image: messaging-app:latest
        imagePullPolicy: Never  # Use local image for Minikube
        ports:
        - containerPort: 8000
        env:
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: django-config
              key: DEBUG
        - name: ALLOWED_HOSTS
          valueFrom:
            configMapKeyRef:
              name: django-config
              key: ALLOWED_HOSTS
        - name: LANGUAGE_CODE
          valueFrom:
            configMapKeyRef:
              name: django-config
              key: LANGUAGE_CODE
        - name: TIME_ZONE
          valueFrom:
            configMapKeyRef:
              name: django-config
              key: TIME_ZONE
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              name: django-config
              key: MYSQL_HOST
        - name: MYSQL_PORT
          valueFrom:
            configMapKeyRef:
              name: django-config
              key: MYSQL_PORT
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: django-config
              key: MYSQL_DATABASE
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              name: django-config
              key: MYSQL_USER
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: django-secrets
              key: SECRET_KEY
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: django-secrets
              key: MYSQL_PASSWORD
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        command:
        - /bin/sh
        - -c
        - |
          python manage.py wait_for_db &&
          python manage.py migrate &&
          python manage.py collectstatic --noinput &&
          python manage.py runserver 0.0.0.0:8000
---
apiVersion: v1
kind: Service
metadata:
  name: django-service
  namespace: messaging-app
  labels:
    app: django
    tier: web
spec:
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
  selector:
    app: django
    tier: web
  type: LoadBalancer 